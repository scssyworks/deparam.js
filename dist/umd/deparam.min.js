/*!
 * Deparam plugin converts query string to a valid JavaScript object
 * Released under MIT license
 * @name Deparam.js
 * @author Sachin Singh <https://github.com/scssyworks/deparam.js>
 * @version 3.0.1
 * @license MIT
 */
!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(n="undefined"!=typeof globalThis?globalThis:n||self).deparam=t()}(this,(function(){"use strict";function n(t){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(t)}var t=function(n){return"number"==typeof n?n-n==0:"string"==typeof n&&""!==n.trim()&&(Number.isFinite?Number.isFinite(+n):isFinite(+n))},e=n(void 0),r=n(""),o=("undefined"==typeof window?"undefined":n(window))!==e,u=o?window.location:null,i=Array.isArray;function f(n){return/\[/.test(n)}function c(){return Object.create(null)}function a(t,r){return n(t)===e?r?[]:c():r?t:(o=t,u=c(),i(o)&&o.forEach((function(n,t){u[t]=n})),u);var o,u}function l(r,o){return"object"!==n(u=r)||null===u||i(u)?i(r)||n(r)===e?{ob:a(r,t(o))}:{ob:[r],push:null!==r}:{ob:r};var u}function s(n,t,e,r){var o=n.match(/([^\[]+)\[([^\[]*)\]/)||[];if(3===o.length){var u=o[1],i=o[2];if(f(n=n.replace(/\[([^\[]*)\]/,"")))""===i&&(i="0"),s(n=n.replace(/[^\[]+/,i),t,e[u]=l(e[u],i).ob,r);else if(i){var a=l(e[u],i),b=a.ob,d=a.push;e[u]=b;var m=d?c():e[u];m[i]=y(t,!r),d&&e[u].push(m)}else p([o[1],t],e,!0,r)}}function p(n,t,e,r){var o=n[0],u=n[1];u=y(u,!r),!function(n,t){return Object.prototype.hasOwnProperty.call(n,t)}(t,o)?t[o]=e?[u]:u:(t[o]=i(t[o])?t[o]:[t[o]],t[o].push(u))}function y(o,u){if(null==o)return"";if(u||n(o)!==r)return o;if(o=o.trim(),t(o))return+o;switch(o){case"null":return null;case e:return;case"true":return!0;case"false":return!1;case"NaN":return NaN;default:return o}}return function(t,e){var i=this;o&&n(t)!==r&&(t=u.search);var a=(t=t.substring("?"===t.charAt(0))).split("&"),l=c();return t&&a.forEach((function(n){var t=n.split("=").map((function(n){return decodeURIComponent(n)}));f(t[0])?s.apply(i,[].concat(t).concat([l,e])):p.apply(i,[t,l,!1,e])})),l}}));
